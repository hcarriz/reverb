// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/hcarriz/reverb/generated/ent/todo"
	"time"
)

// CreateTodoInput represents a mutation input for creating todos.
type CreateTodoInput struct {
	Content  string
	Due      *time.Time
	Priority *todo.Priority
}

// Mutate applies the CreateTodoInput on the TodoMutation builder.
func (i *CreateTodoInput) Mutate(m *TodoMutation) {
	m.SetContent(i.Content)
	if v := i.Due; v != nil {
		m.SetDue(*v)
	}
	if v := i.Priority; v != nil {
		m.SetPriority(*v)
	}
}

// SetInput applies the change-set in the CreateTodoInput on the TodoCreate builder.
func (c *TodoCreate) SetInput(i CreateTodoInput) *TodoCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateTodoInput represents a mutation input for updating todos.
type UpdateTodoInput struct {
	Content  *string
	ClearDue bool
	Due      *time.Time
	Priority *todo.Priority
}

// Mutate applies the UpdateTodoInput on the TodoMutation builder.
func (i *UpdateTodoInput) Mutate(m *TodoMutation) {
	if v := i.Content; v != nil {
		m.SetContent(*v)
	}
	if i.ClearDue {
		m.ClearDue()
	}
	if v := i.Due; v != nil {
		m.SetDue(*v)
	}
	if v := i.Priority; v != nil {
		m.SetPriority(*v)
	}
}

// SetInput applies the change-set in the UpdateTodoInput on the TodoUpdate builder.
func (c *TodoUpdate) SetInput(i UpdateTodoInput) *TodoUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateTodoInput on the TodoUpdateOne builder.
func (c *TodoUpdateOne) SetInput(i UpdateTodoInput) *TodoUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
